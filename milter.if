## <summary>Milter mail filters.</summary>

#######################################
## <summary>
##	The template to define a milter domain.
## </summary>
## <param name="domain_prefix">
##	<summary>
##	Domain prefix to be used.
##	</summary>
## </param>
#
template(`milter_template',`
	# attributes common to all milters
	gen_require(`
		attribute milter_data_type, milter_domains;
	')

	########################################
	#
	# Declarations
	#

	type $1_milter_t, milter_domains;
	type $1_milter_exec_t;
	init_daemon_domain($1_milter_t, $1_milter_exec_t)
	#role system_r types $1_milter_t;

	# Type for the milter data (e.g. the socket used to communicate with the MTA)
	type $1_milter_data_t, milter_data_type;
	files_runtime_file($1_milter_data_t)
	#files_pid_file($1_milter_data_t)

	########################################
	#
	# Policy
	#

	# Create other data files and directories in the data directory
	manage_files_pattern($1_milter_t, $1_milter_data_t, $1_milter_data_t)
	# Allow communication with MTA over a unix-domain socket
	manage_sock_files_pattern($1_milter_t, $1_milter_data_t, $1_milter_data_t)

	auth_use_nsswitch($1_milter_t)

	logging_send_syslog_msg($1_milter_t)
')

########################################
## <summary>
##	connect to all milter domains using
##	a unix domain stream socket.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`milter_stream_connect_all',`
	gen_require(`
		attribute milter_data_type, milter_domains;
	')

	files_search_runtime($1)
	#files_search_pids($1)
	#getattr_dirs_pattern($1, milter_data_type, milter_data_type)
	stream_connect_pattern($1, milter_data_type, milter_data_type, milter_domains)
')

########################################
## <summary>
##	Get attributes of all  milter sock files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`milter_getattr_all_sockets',`
	gen_require(`
		attribute milter_data_type;
	')

	#getattr_dirs_pattern($1, milter_data_type, milter_data_type)
	getattr_sock_files_pattern($1, milter_data_type, milter_data_type)
')

########################################
## <summary>
##	Allow setattr of milter dirs
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`milter_setattr_all_dirs',`
	gen_require(`
		attribute milter_data_type;
	')

	setattr_dirs_pattern($1, milter_data_type, milter_data_type)
')

########################################
## <summary>
##	Create, read, write, and delete
##	spamassissin milter data content.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`milter_manage_spamass_state',`
	gen_require(`
		type spamass_milter_state_t;
	')

	files_search_var_lib($1)
	manage_files_pattern($1, spamass_milter_state_t, spamass_milter_state_t)
	manage_dirs_pattern($1, spamass_milter_state_t, spamass_milter_state_t)
	manage_lnk_files_pattern($1, spamass_milter_state_t, spamass_milter_state_t)
')

########################################
## <summary>
##	create spamass milter state dir
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`milter_var_lib_filetrans_spamass_state',`
	gen_require(`
		type spamass_milter_state_t;
	')

	files_var_lib_filetrans($1, spamass_milter_state_t, dir, "spamass-milter")
')

########################################
## <summary>
##	Get the attributes of the spamassissin milter data dir.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`milter_getattr_data_dir',`
	gen_require(`
		type spamass_milter_data_t;
	')

	allow $1 spamass_milter_data_t:dir getattr;
')

#######################################
## <summary>
##	Delete dkim-milter PID files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`milter_delete_dkim_pid_files',`
	gen_require(`
		type dkim_milter_data_t;
	')

	files_search_pids($1)
	delete_files_pattern($1, dkim_milter_data_t, dkim_milter_data_t)
')

#######################################
## <summary>
##	Delete OpenARC-milter PID files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`milter_delete_openarc_pid_files',`
	gen_require(`
		type openarc_milter_data_t;
	')

	files_search_pids($1)
	delete_files_pattern($1, openarc_milter_data_t, openarc_milter_data_t)
')
